/// <reference types="dcl" />
/*!
 * Creates an animated cube to highlight something in DCL
 * it can be rotated to point in a predetermined direction
 * @public
 */
export declare class Dash_BoxHighlight extends Entity {
    position: Vector3;
    scale: Vector3;
    dir: string;
    visible: boolean;
    texture?: Texture | undefined;
    onClick?: OnPointerDown | undefined;
    private timer;
    private duration;
    private sides;
    private sideTopEntity;
    private sideTopShape;
    private sideBottomEntity;
    private sideBottomShape;
    private sideNorthEntity;
    private sideNorthShape;
    private sideSouthEntity;
    private sideSouthShape;
    private sideEastEntity;
    private sideEastShape;
    private sideWestEntity;
    private sideWestShape;
    private stripeMaterial;
    private surfaceMaterial;
    constructor(position: Vector3, scale: Vector3, dir?: string, visible?: boolean, texture?: Texture | undefined, onClick?: OnPointerDown | undefined);
    private setSides;
    /**
     * Scales the boxHighlight's dimensions
     * @param x - scale on x axis
     * @param y - scale on y axis
     * @param z - scale on z axis
     */
    setScale(x: number, y: number, z: number): void;
    /**
     * Repositions the boxHighlight
     * @param x - x position
     * @param y - y position
     * @param z - z position
     */
    setPosition(x: number, y: number, z: number): void;
    /**
     * Sets the direction this effect should be facing
     * @param dir - string: "top" | "bottom" | "north" | "south" | "east" | "west"
     */
    setDirection(dir: string): void;
    /**
     * Sets a new texture to the boxHighlight entity
     * @param texture - Texture object to apply to the boxHighlight materials
     */
    setTexture(texture: Texture): void;
    /**
     * Sets the color of the stripes that encircle the boxHighlight
     * @param color - Color3 object, set it's rgb values from 0 to 1 for normal, or 1 to 10 for a nice glowing effect
     */
    setStripeColor(color: Color3): void;
    /**
     * Sets the color of the surface that the boxHighlight is targeted to
     * @param color - Color3 object, set it's rgb values from 0 to 1 for normal, or 1 to 10 for a nice glowing effect
     */
    setSurfaceColor(color: Color3): void;
    /**
     * Shows the boxHighlight
     */
    show(): void;
    /**
     * Hides the boxHighlight
     */
    hide(): void;
    /**
     * Updates the UV map to make a nice stripe animation effect
     * @param dt - deltatime
     */
    updateUV(dt: number): void;
}
//# sourceMappingURL=BoxHighlight.d.ts.map