/// <reference types="dcl" />
/**
 * Usage
 **
    AnimationQueue.add({
        duration: 1,
        data: { someval: 'foo' },
        onInit: () => { log('Init!')},
        onFrame: (progress, data) => { log({ progress, data })},
        onComplete: () => { log('completed')}
    })
*/
export interface Dash_AnimationQueue_Setting {
    duration: number;
    id?: number;
    data?: any;
    onFrame?: (progress: number, data?: any) => void;
    onComplete?: () => void;
    timer?: number;
}
declare class AnimationQueue_Controller implements ISystem {
    private system;
    private nonce;
    private queue;
    constructor();
    add(setting: Dash_AnimationQueue_Setting): Dash_AnimationQueue_Setting;
    update(dt: number): void;
    enable(): void;
    disable(): void;
}
export declare const Dash_AnimationQueue: AnimationQueue_Controller;
export {};
//# sourceMappingURL=AnimationQueue.d.ts.map